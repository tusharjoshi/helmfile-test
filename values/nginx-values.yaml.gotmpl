# NGINX Helm Chart Values Template
# This file uses Go template syntax for dynamic value generation

# Image configuration
image:
  registry: docker.io
  repository: bitnami/nginx
  tag: '{{ .Values.nginx.image.tag | default "1.25.3" }}'
  pullPolicy: IfNotPresent

# Replica configuration
replicaCount: {{ .Values.nginx.replicaCount | default 1 }}

# Service configuration
service:
  type: '{{ .Values.nginx.service.type | default "ClusterIP" }}'
  ports:
    http: {{ .Values.nginx.service.port | default 80 }}
  {{- if eq (.Values.nginx.service.type | default "ClusterIP") "NodePort" }}
  nodePorts:
    http: ""
  {{- end }}

# Resource limits and requests
resources:
  requests:
    memory: '{{ .Values.nginx.resources.requests.memory | default "64Mi" }}'
    cpu: '{{ .Values.nginx.resources.requests.cpu | default "50m" }}'
  limits:
    memory: '{{ .Values.nginx.resources.limits.memory | default "128Mi" }}'
    cpu: '{{ .Values.nginx.resources.limits.cpu | default "100m" }}'

# Pod Security Context
podSecurityContext:
  fsGroup: 1001

# Container Security Context
containerSecurityContext:
  runAsUser: 1001
  runAsNonRoot: true

# Health checks
livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Custom NGINX configuration
serverBlock: |
  server {
      listen 8080;
      location / {
          return 200 "Hello from NGINX in {{ .Environment.Name }} environment!\n";
          add_header Content-Type text/plain;
      }
      location /health {
          return 200 "OK";
          add_header Content-Type text/plain;
      }
  }

# Labels and annotations
commonLabels:
  app.kubernetes.io/name: nginx
  app.kubernetes.io/instance: '{{ .Values.nginx.name }}'
  app.kubernetes.io/version: '{{ .Values.nginx.image.tag }}'
  app.kubernetes.io/component: web
  app.kubernetes.io/part-of: umbrella-chart
  environment: '{{ .Environment.Name }}'

commonAnnotations:
  helmfile.env: '{{ .Environment.Name }}'
  helmfile.namespace: '{{ .Values.nginx.namespace }}'
